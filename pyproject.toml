[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools", "setuptools-scm"]

[project]
authors = [
    {email = "arc.collaborations@ucl.ac.uk", name = "Collaborations team, UCL Centre for Advanced Research Computing"},
]
classifiers = [
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]
dependencies = ["jax", "networkx", "numpy", "numpyro", "typing_extensions"]
description = "A Python package for causal modelling and inference with stochastic causal programming"
dynamic = ["version"]
keywords = []
name = "causalprog"
optional-dependencies = {dev = [
    "build",
    "mypy",
    "pre-commit",
    "ruff",
    "tox",
    "twine",
], docs = [
    "mkdocs",
    "mkdocs-include-markdown-plugin",
    "mkdocs-material",
    "mkdocstrings",
    "mkdocstrings-python",
], test = [
    "numpy",
    "pytest",
    "pytest-cov",
]}
readme = "README.md"
requires-python = ">=3.11"
license.file = "LICENSE.md"
urls.homepage = "https://github.com/UCL/causalprog"

[tool.coverage]
report = {sort = "cover"}
run = {branch = true, parallel = true, source = ["causalprog"]}
paths.source = ["src", ".tox*/*/lib/python*/site-packages"]

[tool.mypy]
exclude = ["tests"]
explicit_package_bases = true

[tool.pytest.ini_options]
addopts = ["--color=yes", "--import-mode=importlib", "--verbose"]
testpaths = ["tests"]

[tool.ruff]
fix = true
force-exclude = true
lint.ignore = [
    "COM812", # trailing commas (ruff-format recommended)
    "D105", # missing docstrings on magic (dunder) methods
    "D203", # no-blank-line-before-class
    "D212", # multi-line-summary-first-line
    "D407", # removed dashes lines under sections
    "D417", # argument description in docstring (unreliable)
    "FIX002", # Lines marked with "todo" are OK for now:
    "ISC001", # simplify implicit str concatenation (ruff-format recommended)
    "TD002", # Lines marked with "todo" are OK for now
    "TD003", # Lines marked with "todo" are OK for now
    "PLR0913", # More than 5 function inputs
]
lint.per-file-ignores = {"__init__.py" = [
    "F401", # Unused import
], "tests*" = [
    "ANN",
    "D",
    "INP001", # File is part of an implicit namespace package.
    "PLR0913", # Too many arguments in function definition
    "S101", # Use of `assert` detected
]}
lint.select = ["ALL"]
lint.flake8-unused-arguments.ignore-variadic-names = true
lint.isort.known-first-party = ["causalprog"]
lint.mccabe.max-complexity = 18
lint.pep8-naming.classmethod-decorators = ["classmethod"]

[tool.setuptools_scm]
local_scheme = "no-local-version"
write_to = "src/causalprog/_version.py"

[tool.tomlsort]
all = true
spaces_indent_inline_array = 4
trailing_comma_inline_array = true
overrides."project.classifiers".inline_arrays = false
overrides."tool.coverage.paths.source".inline_arrays = false
overrides."tool.tox.env.docs.commands".inline_arrays = false
overrides."tool.tox.env_run_base.commands".inline_arrays = false

[tool.tox]
env_list = ["py311", "py312", "py313"]
env_run_base = {commands = [
    [
        "pytest",
        "--cov",
        "--cov-report=xml",
    ],
], extras = [
    "test",
]}
env.docs = {commands = [["mkdocs", "build", "--strict"]], extras = ["docs"]}
gh.python."3.11" = ["py311"]
gh.python."3.12" = ["py312"]
gh.python."3.13" = ["py313"]
